{
  "$schema": "https://json.schemastore.org/tsconfig",
  "display": "Svelte",
  "_version": "3.0.0",
  "compilerOptions": {
    "moduleResolution": "node",
    "target": "es2017",
    // "importsNotUsedAsValues": "error",
    // "preserveValueImports": true,
    "isolatedModules": true,
    "sourceMap": true,
    "esModuleInterop": true,
    "skipLibCheck": true,
    "forceConsistentCasingInFileNames": true,
    "useDefineForClassFields": true,
    "module": "ESNext",
    "resolveJsonModule": true,
    "allowJs": true,
    "checkJs": true,
    "paths": {
            "@astric": ["./FrontEnd/shared/imports/controlers.ts"],
            "@astric-validate": ["./FrontEnd/shared/imports/validate.ts"],
            "@astric-login": ["./FrontEnd/shared/imports/login.ts"],
            "@astric-env": ["./FrontEnd/config.json"],
            "@astric-store": ["./FrontEnd/src/base/store.ts"],
            "@/*": ["./FrontEnd/src/app/*"]
        },
     "strict": false /* Enable all strict type-checking options. */,
     "noImplicitAny": true /* Enable error reporting for expressions and declarations with an implied 'any' type. */,
     "strictNullChecks": true /* When type checking, take into account 'null' and 'undefined'. */,
     "strictFunctionTypes": true /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */,
     "strictBindCallApply": true /* Check that the arguments for 'bind', 'call', and 'apply' methods match the original function. */,
     "strictPropertyInitialization": true /* Check for class properties that are declared but not set in the constructor. */,
     "noImplicitThis": true /* Enable error reporting when 'this' is given the type 'any'. */,
     "useUnknownInCatchVariables": true /* Default catch clause variables as 'unknown' instead of 'any'. */,
     "alwaysStrict": true /* Ensure 'use strict' is always emitted. */,
     "noUnusedLocals": true /* Enable error reporting when local variables aren't read. */,
     "noUnusedParameters": true /* Raise an error when a function parameter isn't read. */,
     "exactOptionalPropertyTypes": true /* Interpret optional property types as written, rather than adding 'undefined'. */,
     "noImplicitReturns": true /* Enable error reporting for codepaths that do not explicitly return in a function. */,
     "noFallthroughCasesInSwitch": true /* Enable error reporting for fallthrough cases in switch statements. */,
     "noUncheckedIndexedAccess": true /* Add 'undefined' to a type when accessed using an index. */,
     "noImplicitOverride": true /* Ensure overriding members in derived classes are marked with an override modifier. */,
     "noPropertyAccessFromIndexSignature": true /* Enforces using indexed accessors for keys declared using an indexed type. */,
     "allowUnusedLabels": true /* Disable error reporting for unused labels. */,
     "allowUnreachableCode": true /* Disable error reporting for unreachable code. */
  },
  "include": ["FrontEnd/**/**/*", "FrontEnd/src/**/*.d.ts", "FrontEnd/src/**/*.ts", "FrontEnd/src/**/*.js", "FrontEnd/src/**/*.svelte"],
  "exclude": [
    ".astric/*",
    "RestServer/*",
    "RestClinet/*",
    "public/*",
    "FrontEnd/review/*",
    "doc/*",
    "BackEnd/*",
    "node_modules/*",
    "__sapper__/*"
  ],
  "references": [{ "path": "./tsconfig.node.json" }]
}
